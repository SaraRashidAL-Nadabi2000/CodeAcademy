# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ETeZyRsaSRFazQRqpop2Y_IUPQmXm6xR
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import datasets
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn import svm, ensemble, neighbors,linear_model

digits= datasets.load_digits()
x=digits.data
y=digits.target

df_y= pd.DataFrame(y,columns=['target'])

sns.countplot(x='target',data=df_y)
plt.title('Distripution of Target Variable')
plt.show()

from sqlalchemy.sql.functions import random
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=42)
models={
    'SVM': svm.SVC(Kernel='linear',c=1, random_state=42),
    "Ranom Forest":ensemble.RandomForestClassifier(random_state=42),
    'KNN': neighbors.KNeighborsClassifier(),
    'Logistic Regretion':linear_model.LogisticRegression(max_iter=10000, random_state=42)

}

scores_train_val={}
scores_cv={}
for model_neme in models:
  models=models[model_name]
  models.fit(x_train.y_train)
  scores_train_val[model_name]=model.score(x_test, y_test)
  scores_cv[model_name]=cross_val_score(model,x,y,cv=10).mean()